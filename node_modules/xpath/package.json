{
  "_args": [
    [
      {
        "raw": "xpath@0.0.27",
        "scope": null,
        "escapedName": "xpath",
        "name": "xpath",
        "rawSpec": "0.0.27",
        "spec": "0.0.27",
        "type": "version"
      },
      "C:\\Users\\AMD_T\\Google Drive\\Applications\\Reactjs\\psu-service-api\\node_modules\\read-excel-file"
    ]
  ],
  "_from": "xpath@0.0.27",
  "_id": "xpath@0.0.27",
  "_inCache": true,
  "_location": "/xpath",
  "_nodeVersion": "8.9.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/xpath-0.0.27.tgz_1512395691348_0.6476453763898462"
  },
  "_npmUser": {
    "name": "jlrishe",
    "email": "jrishe@gmail.com"
  },
  "_npmVersion": "5.0.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "xpath@0.0.27",
    "scope": null,
    "escapedName": "xpath",
    "name": "xpath",
    "rawSpec": "0.0.27",
    "spec": "0.0.27",
    "type": "version"
  },
  "_requiredBy": [
    "/read-excel-file"
  ],
  "_resolved": "https://registry.npmjs.org/xpath/-/xpath-0.0.27.tgz",
  "_shasum": "dd3421fbdcc5646ac32c48531b4d7e9d0c2cfa92",
  "_shrinkwrap": null,
  "_spec": "xpath@0.0.27",
  "_where": "C:\\Users\\AMD_T\\Google Drive\\Applications\\Reactjs\\psu-service-api\\node_modules\\read-excel-file",
  "author": {
    "name": "Cameron McCormack"
  },
  "bugs": {
    "url": "https://github.com/goto100/xpath/issues"
  },
  "contributors": [
    {
      "name": "goto100"
    },
    {
      "name": "James Rishe"
    }
  ],
  "dependencies": {},
  "description": "DOM 3 XPath implemention and helper for node.js.",
  "devDependencies": {
    "nodeunit": ">=0.6.4",
    "xmldom": "^0.1.19"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-fg03WRxtkCV6ohClePNAECYsmpKKTv5L8y/X3Dn1hQrec3POx2jHZ/0P2qQ6HvsrU1BmeqXcof3NGGueG6LxwQ==",
    "shasum": "dd3421fbdcc5646ac32c48531b4d7e9d0c2cfa92",
    "tarball": "https://registry.npmjs.org/xpath/-/xpath-0.0.27.tgz"
  },
  "engines": {
    "node": ">=0.6.0"
  },
  "gitHead": "eef0ae8a6a3291f5d6a74a6077e1295ae5cef740",
  "homepage": "https://github.com/goto100/xpath#readme",
  "keywords": [
    "xpath",
    "xml"
  ],
  "license": "MIT",
  "main": "./xpath.js",
  "maintainers": [
    {
      "name": "goto100",
      "email": "goto100@gmail.com"
    },
    {
      "name": "jlrishe",
      "email": "jrishe@gmail.com"
    }
  ],
  "name": "xpath",
  "optionalDependencies": {},
  "readme": "## xpath\r\nDOM 3 XPath 1.0 implemention and helper for JavaScript, with node.js support.\r\n\r\nOriginally written by Cameron McCormack ([blog](http://mcc.id.au/xpathjs)).\r\n\r\nAdditional contributions from  \r\nYaron Naveh ([blog](http://webservices20.blogspot.com/))  \r\ngoto100  \r\nThomas Weinert  \r\nJimmy Rishe  \r\nand [others](https://github.com/goto100/xpath/graphs/contributors)\r\n\r\n## Install\r\nInstall with [npm](http://github.com/isaacs/npm):\r\n\r\n    npm install xpath\r\n\r\nxpath is xml engine agnostic but I recommend to use [xmldom](https://github.com/jindw/xmldom):\r\n\r\n    npm install xmldom\r\n\r\n## API Documentation\r\n\r\nCan be found [here](https://github.com/goto100/xpath/blob/master/docs/xpath%20methods.md). See below for example usage.\r\n\r\n## Your first xpath:\r\n`````javascript\r\nvar xpath = require('xpath')\r\n  , dom = require('xmldom').DOMParser\r\n\r\nvar xml = \"<book><title>Harry Potter</title></book>\"\r\nvar doc = new dom().parseFromString(xml)\r\nvar nodes = xpath.select(\"//title\", doc)\r\n\r\nconsole.log(nodes[0].localName + \": \" + nodes[0].firstChild.data)\r\nconsole.log(\"Node: \" + nodes[0].toString())\r\n`````\r\n➡\r\n\r\n    title: Harry Potter\r\n    Node: <title>Harry Potter</title>\r\n\r\n### Alternatively\r\n\r\nUsing the same interface you have on modern browsers ([MDN])\r\n\r\n`````javascript\r\nvar node = null;\r\nvar xml = \"<book author='J. K. Rowling'><title>Harry Potter</title></book>\"\r\nvar doc = new dom().parseFromString(xml)\r\nvar result = xpath.evaluate(\r\n    \"/book/title\",            // xpathExpression\r\n    doc,                        // contextNode\r\n    null,                       // namespaceResolver\r\n    xpath.XPathResult.ANY_TYPE, // resultType\r\n    null                        // result\r\n)\r\n\r\nnode = result.iterateNext();\r\nwhile (node) {\r\n    console.log(node.localName + \": \" + node.firstChild.data);\r\n    console.log(\"Node: \" + node.toString());\r\n\r\n    node = result.iterateNext();\r\n}\r\n`````\r\n➡\r\n\r\n    title: Harry Potter\r\n    Node: <title>Harry Potter</title>\r\n\r\n## Evaluate string values directly:\r\n`````javascript\r\nvar xml = \"<book><title>Harry Potter</title></book>\";\r\nvar doc = new dom().parseFromString(xml);\r\nvar title = xpath.select(\"string(//title)\", doc);\r\n\r\nconsole.log(title);\r\n`````\r\n➡\r\n\r\n    Harry Potter\r\n\r\n## Namespaces\r\n`````javascript\r\nvar xml = \"<book><title xmlns='myns'>Harry Potter</title></book>\"\r\nvar doc = new dom().parseFromString(xml)\r\nvar node = xpath.select(\"//*[local-name(.)='title' and namespace-uri(.)='myns']\", doc)[0]\r\n\r\nconsole.log(node.namespaceURI)\r\n`````\r\n➡\r\n\r\n    myns\r\n\r\n## Namespaces with easy mappings\r\n`````javascript\r\nvar xml = \"<book xmlns:bookml='http://example.com/book'><bookml:title>Harry Potter</bookml:title></book>\"\r\nvar select = xpath.useNamespaces({\"bookml\": \"http://example.com/book\"});\r\n\r\nconsole.log(select('//bookml:title/text()', doc)[0].nodeValue);\r\n`````\r\n➡\r\n\r\n    Harry Potter\r\n\r\n## Default namespace with mapping\r\n`````javascript\r\nvar xml = \"<book xmlns='http://example.com/book'><title>Harry Potter</title></book>\"\r\nvar select = xpath.useNamespaces({\"bookml\": \"http://example.com/book\"});\r\n\r\nconsole.log(select('//bookml:title/text()', doc)[0].nodeValue);\r\n`````\r\n➡\r\n\r\n    Harry Potter\r\n\r\n## Attributes\r\n`````javascript\r\nvar xml = \"<book author='J. K. Rowling'><title>Harry Potter</title></book>\"\r\nvar doc = new dom().parseFromString(xml)\r\nvar author = xpath.select1(\"/book/@author\", doc).value\r\n\r\nconsole.log(author)\r\n`````\r\n➡\r\n\r\n    J. K. Rowling\r\n\r\n[MDN]: https://developer.mozilla.org/en/docs/Web/API/Document/evaluate\r\n\r\n## License\r\nMIT",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/goto100/xpath.git"
  },
  "scripts": {
    "test": "nodeunit test.js"
  },
  "typings": "./xpath.d.ts",
  "version": "0.0.27"
}
