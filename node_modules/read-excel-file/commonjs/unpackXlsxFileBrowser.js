'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = unpackXlsxFile;

var _jszip = require('jszip');

var _readXlsxFileHelpers = require('./readXlsxFileHelpers');

/**
 * Reads XLSX file in a browser.
 * @param  {file} file - A file being uploaded in the browser.
 * @param  {object} options
 * @param  {string?} options.sheet - Excel document sheet to read. Defaults to `1`. Will only read this sheet and skip others.
 * @return {Promise} Resolves to an object holding XLSX file entries.
 */
function unpackXlsxFile(file, _ref) {
	var sheet = _ref.sheet;

	var files = {};

	return (0, _jszip.loadAsync)(file).then(function (zip) {
		var files = [];
		zip.forEach(function (relativePath, zipEntry) {
			if ((0, _readXlsxFileHelpers.getXlsxEntryKey)(zipEntry.name, sheet)) {
				files.push(zipEntry.name);
			}
		});

		var entries = {};
		return Promise.all(files.map(function (file) {
			return zip.file(file).async('string').then(function (text) {
				entries[(0, _readXlsxFileHelpers.getXlsxEntryKey)(file, sheet)] = text;
			});
		})).then(function () {
			return (0, _readXlsxFileHelpers.validateXlsxEntries)(entries, sheet);
		});
	});
}
//# sourceMappingURL=unpackXlsxFileBrowser.js.map