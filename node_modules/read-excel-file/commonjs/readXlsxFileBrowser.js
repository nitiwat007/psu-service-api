'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = readXlsxFile;

var _unpackXlsxFileBrowser = require('./unpackXlsxFileBrowser');

var _unpackXlsxFileBrowser2 = _interopRequireDefault(_unpackXlsxFileBrowser);

var _xmlBrowser = require('./xmlBrowser');

var _xmlBrowser2 = _interopRequireDefault(_xmlBrowser);

var _readXlsx = require('./readXlsx');

var _readXlsx2 = _interopRequireDefault(_readXlsx);

var _convertToJson = require('./convertToJson');

var _convertToJson2 = _interopRequireDefault(_convertToJson);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Reads XLSX file into a 2D array of cells in a browser.
 * @param  {file} file - A file being uploaded in the browser.
 * @param  {object?} options
 * @param  {string?} options.sheet - Excel document sheet to read. Defaults to `1`. Will only read this sheet and skip others.
 * @return {Promise} Resolves to a 2D array of cells: an array of rows, each row being an array of cells.
 */
function readXlsxFile(file) {
	var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

	// Deprecated 1.0.0 `sheet` argument. Will be removed in some next major release.
	if (typeof options === 'string' || typeof options === 'number') {
		options = { sheet: options };
	} else if (!options.sheet) {
		options.sheet = 1;
	}
	return (0, _unpackXlsxFileBrowser2.default)(file, options).then(function (entries) {
		return (0, _readXlsx2.default)(entries, _xmlBrowser2.default, options);
	}).then(function (rows) {
		if (options.schema) {
			return (0, _convertToJson2.default)(rows, options.schema, options);
		}
		return rows;
	});
}
//# sourceMappingURL=readXlsxFileBrowser.js.map